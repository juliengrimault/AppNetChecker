<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EXTMaybe.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EXTMaybe</TokenIdentifier>
			<Abstract type="html">Behaves like an \c NSError object, but treats unrecognized selectors like
messages sent to \c nil.</Abstract>
			<DeclaredIn>EXTMaybe.h</DeclaredIn>
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EXTMaybe/maybeWithError:</TokenIdentifier>
			<Abstract type="html">Returns an object which behaves like the given error when sent \c NSError
messages, or behaves like \c nil (using #EXTNil when sent anything else.</Abstract>
			<DeclaredIn>EXTMaybe.h</DeclaredIn>			
			
			<Declaration>+ (id)maybeWithError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/maybeWithError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EXTMaybe/validObjectWithMaybe:orElse:</TokenIdentifier>
			<Abstract type="html">If \a maybe is a valid object -- meaning an object which is not an \c
NSError, \c NSNull, or #EXTNil -- that object is returned.</Abstract>
			<DeclaredIn>EXTMaybe.h</DeclaredIn>			
			
			<Declaration>+ (id)validObjectWithMaybe:(id)maybe orElse:(id ( ^ ) ( NSError *))block</Declaration>
			
			
			<Anchor>//api/name/validObjectWithMaybe:orElse:</Anchor>
		</Token>
		
	</File>
</Tokens>