<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EXTMultiObject.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EXTMultiObject</TokenIdentifier>
			<Abstract type="html">Functions as a proxy for one or more other objects of any class and forwards
each message to the first proxied object that responds to it. This does not send
every message to each target, with some exceptions for reflection functionality
within the \c NSObject protocol. The result is dynamism very much like multiple
inheritance.</Abstract>
			<DeclaredIn>EXTMultiObject.h</DeclaredIn>
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EXTMultiObject/multiObjectForObjects:</TokenIdentifier>
			<Abstract type="html">Returns an autoreleased object that will selectively dispatch messages to the provided
objects as they are received. The order of the objects in the argument list
determines the order in which method lookup and dispatch occurs.</Abstract>
			<DeclaredIn>EXTMultiObject.h</DeclaredIn>			
			
			<Declaration>+ (id)multiObjectForObjects:(id)firstObj, ...</Declaration>
			
			
			<Anchor>//api/name/multiObjectForObjects:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EXTMultiObject/multiObjectForObjectsInArray:</TokenIdentifier>
			<Abstract type="html">Returns an autoreleased object that will selectively dispatch messages to the provided
objects as they are received. The order of the objects in the array determines
the order in which method lookup and dispatch occurs.</Abstract>
			<DeclaredIn>EXTMultiObject.h</DeclaredIn>			
			
			<Declaration>+ (id)multiObjectForObjectsInArray:(NSArray *)objects</Declaration>
			
			
			<Anchor>//api/name/multiObjectForObjectsInArray:</Anchor>
		</Token>
		
	</File>
</Tokens>